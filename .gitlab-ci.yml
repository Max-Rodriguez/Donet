include:
  - template: Security/SAST.gitlab-ci.yml
  - template: Security/Secret-Detection.gitlab-ci.yml

variables:
  TYPOS_UPSTREAM: "https://github.com/crate-ci/typos/releases/download/v1.22.7/typos-v1.22.7-x86_64-unknown-linux-musl.tar.gz"

stages:
  - check
  - build
  - test
  - deploy

.setup-codecov-cli: &setup-codecov-cli
  # download Codecov CLI
  - curl -Os https://cli.codecov.io/latest/linux/codecov
  # integrity check
  - curl https://keybase.io/codecovsecurity/pgp_keys.asc | gpg --no-default-keyring --keyring trustedkeys.gpg --import # One-time step
  - curl -Os https://cli.codecov.io/latest/linux/codecov
  - curl -Os https://cli.codecov.io/latest/linux/codecov.SHA256SUM
  - curl -Os https://cli.codecov.io/latest/linux/codecov.SHA256SUM.sig
  - gpgv codecov.SHA256SUM.sig codecov.SHA256SUM
  # verify hash sum and test
  - shasum -a 256 -c codecov.SHA256SUM
  - sudo chmod +x codecov
  - ./codecov --help

commit-validation:
  image: 'python:3.12-alpine'
  stage: check
  interruptible: true
  script:
    - python build-aux/validate-commit.py "${CI_COMMIT_TITLE}"

typos:
  image: alpine
  stage: check
  interruptible: true
  script:
    - apk add --no-cache wget tar
    - wget ${TYPOS_UPSTREAM}
    - mkdir .tmp
    - tar -xzf typos-v*.tar.gz -C .tmp/
    - ./.tmp/typos

cargo-deny:
  image: rust
  stage: check
  allow_failure: true
  interruptible: true
  script:
    - cargo install cargo-deny --locked
    - cargo deny check

cargo-fmt:
  image: 'rust:slim'
  stage: check
  interruptible: true
  script:
    - rustup component add rustfmt
    # Create blank versions of our Meson-configured files
    # so rustfmt does not yell about non-existent files or completely empty files
    - echo -e "" >> donet/src/meson.rs
    - rustc -Vv && cargo -Vv
    - cargo fmt --version
    - cargo fmt --all -- --color=always --check

sast:
  stage: test
