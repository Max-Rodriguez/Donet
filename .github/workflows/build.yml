name: Continuous Integration
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
    steps:
      - name: Git Checkout
        uses: actions/checkout@v3
      - name: Set up Rust nightly
        id: toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
      - name: Cache cargo build
        uses: actions/cache@v3
        env:
          cache-name: cargo-build-target
        with:
          path: target
          # key needs to contain rustc_hash so new nightly versions do fresh builds
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ steps.toolchain.outputs.rustc_hash }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-${{ steps.toolchain.outputs.rustc_hash }}-
      - name: Print Rust compiler version
        run: rustc --version
      - name: Run Unit Tests
        run: cargo test
      - name: Build Donet source
        run: cargo build --verbose
  
  tarpaulin-coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout
        uses: actions/checkout@v3
      - name: Set up Rust nightly
        id: toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
      - name: Run cargo-tarpaulin
        uses: actions-rs/tarpaulin@v0.1
        with:
          version: "0.22.0"
      - name: Upload to codecov.io
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
